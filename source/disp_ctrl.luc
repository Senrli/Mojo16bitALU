module disp_ctrl (
    input clk,  // clock
    input rst,  // reset
    input data_bus[19],  //data bus input from tester side, include one bit for pass/fail
    input state[5],  //state input from the tester side
    output seven_seg_out[4][8],  //output to the seven segment display control
    output disc_led_out[3][8]  //output to the discrete 16 leds
  ) {

  .clk(clk) {
    .rst(rst) {
        dff delay_counter[23];   //divide each second into 4, meaning counter resets every 12,500,000 ticks 
        fsm scroll_counter = {ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, TEN, ELEVEN};
    }
  }
  
  
  dec_decoder seven_seg_dec;
  
  always {
    seven_seg_dec.bin_in = data_bus[15:0];
    case (state){
      0:
        if (delay_counter.q == 2000000){
          
          case(scroll_counter.q)
          {
            scroll_counter.ZERO:
              seven_seg_out = {8d21, 8hff, 8hff, 8hff};
              scroll_counter.d = scroll_counter.ONE;
              disc_led_out = {8h00, 8h00, 8hc0};
              
            scroll_counter.ONE:
              seven_seg_out = {8hff, 8d21, 8hff, 8hff};
              scroll_counter.d = scroll_counter.TWO;
              disc_led_out = {8h00, 8h00, 8h30};
              
            scroll_counter.TWO:
              seven_seg_out = {8hff, 8hff, 8d21, 8hff};
              scroll_counter.d = scroll_counter.THREE;
              disc_led_out = {8h00, 8h00, 8h0c};
          
            scroll_counter.THREE:
              seven_seg_out = {8hff, 8hff, 8hff, 8d21};
              scroll_counter.d = scroll_counter.FOUR;
              disc_led_out = {8h00, 8h00, 8h03};
              
            scroll_counter.FOUR:
              seven_seg_out = {8hff, 8hff, 8hff, 8d22};
              scroll_counter.d = scroll_counter.FIVE;
              disc_led_out = {8hc0, 8h00, 8h00};
              
            scroll_counter.FIVE:
              seven_seg_out = {8hff, 8hff, 8hff, 8d23};
              scroll_counter.d = scroll_counter.SIX;
              disc_led_out = {8h30, 8h00, 8h00};
              
            scroll_counter.SIX:
              seven_seg_out = {8hff, 8hff, 8hff, 8d24};
              scroll_counter.d = scroll_counter.SEVEN;
              disc_led_out = {8h0c, 8h00, 8h00};
              
            scroll_counter.SEVEN:
              seven_seg_out = {8hff, 8hff, 8d24, 8hff};
              scroll_counter.d = scroll_counter.EIGHT;
              disc_led_out = {8h03, 8h00, 8h00};
              
            scroll_counter.EIGHT:
              seven_seg_out = {8hff, 8d24, 8hff, 8hff};
              scroll_counter.d = scroll_counter.NINE;
              disc_led_out = {8h00, 8hc0, 8h00};
              
            scroll_counter.NINE:
              seven_seg_out = {8d24, 8hff, 8hff, 8hff};
              scroll_counter.d = scroll_counter.TEN;
              disc_led_out = {8h00, 8h30, 8h00};
              
            scroll_counter.TEN:
              seven_seg_out = {8d25, 8hff, 8hff, 8hff};
              scroll_counter.d = scroll_counter.ELEVEN;
              disc_led_out = {8h00, 8h0c, 8h00};
              
            scroll_counter.ELEVEN:
              seven_seg_out = {8d26, 8hff, 8hff, 8hff};
              scroll_counter.d = scroll_counter.ZERO;
              disc_led_out = {8h00, 8h03, 8h00};
            
            default:
              disc_led_out = 3x{{8d00}};
              seven_seg_out = 4x{{8hff}};
          }
         delay_counter.d = 0;
        }else{
        delay_counter.d = delay_counter.q + 1;
        }
      1:
        seven_seg_out = {8ha, 8h20, 8hff, 8hff};
        disc_led_out = {8h00, data_bus[15:8], data_bus[7:0]};
      2:
        seven_seg_out = {c{4h0,data_bus[15:12]}, c{4h0,data_bus[11:8]}, c{4h0,data_bus[7:4]}, c{4h0,data_bus[3:0]}};
        disc_led_out = {8h00, data_bus[15:8], data_bus[7:0]};
      3:
        seven_seg_out = {8hb, 8h20, 8hff, 8hff};
        disc_led_out = {8h00, data_bus[15:8], data_bus[7:0]};
      4:
        seven_seg_out = {c{4h0,data_bus[15:12]}, c{4h0,data_bus[11:8]}, c{4h0,data_bus[7:4]}, c{4h0,data_bus[3:0]}};
        disc_led_out = {8h00, data_bus[15:8], data_bus[7:0]};
      5:
        seven_seg_out = {8hff, 8h0, 8h20, (!(!data_bus[18])|!(!data_bus[17])|!(!data_bus[16])|!(!data_bus[15:0]))?8h18:8hf};
        disc_led_out = {c{5h0,data_bus[18:16]}, data_bus[15:8], data_bus[7:0]};
      6:
        seven_seg_out = {8hff, 8h1, 8h20, (!(!data_bus[18])|!(!data_bus[17])|!(!data_bus[16])|!(!data_bus[15:0]))?8h18:8hf};
        disc_led_out = {c{5h0,data_bus[18:16]}, data_bus[15:8], data_bus[7:0]};
      7:
        seven_seg_out = {8hff, 8h2, 8h20, (!(!data_bus[18])|!(!data_bus[17])|!(!data_bus[16])|!(!data_bus[15:0]))?8h18:8hf};
        disc_led_out = {c{5h0,data_bus[18:16]}, data_bus[15:8], data_bus[7:0]};
      8:
        seven_seg_out = {8hff, 8h3, 8h20, (!(!data_bus[18])|!(!data_bus[17])|!(!data_bus[16])|!(!data_bus[15:0]))?8h18:8hf};
        disc_led_out = {c{5h0,data_bus[18:16]}, data_bus[15:8], data_bus[7:0]};
      9:
        seven_seg_out = {8hff, 8h4, 8h20, (!(!data_bus[18])|!(!data_bus[17])|!(!data_bus[16])|!(!data_bus[15:0]))?8h18:8hf};
        disc_led_out = {c{5h0,data_bus[18:16]}, data_bus[15:8], data_bus[7:0]};
      10:
        seven_seg_out = {8hff, 8h5, 8h20, (!(!data_bus[18])|!(!data_bus[17])|!(!data_bus[16])|!(!data_bus[15:0]))?8h18:8hf};
        disc_led_out = {c{5h0,data_bus[18:16]}, data_bus[15:8], data_bus[7:0]};
      11:
        seven_seg_out = {8hff, 8h6, 8h20, (!(!data_bus[18])|!(!data_bus[17])|!(!data_bus[16])|!(!data_bus[15:0]))?8h18:8hf};
        disc_led_out = {c{5h0,data_bus[18:16]}, data_bus[15:8], data_bus[7:0]};
      12:
        seven_seg_out = {8hff, 8h7, 8h20, (!(!data_bus[18])|!(!data_bus[17])|!(!data_bus[16])|!(!data_bus[15:0]))?8h18:8hf};
        disc_led_out = {c{5h0,data_bus[18:16]}, data_bus[15:8], data_bus[7:0]};
      13:
        seven_seg_out = {8hff, 8h8, 8h20, (!(!data_bus[18])|!(!data_bus[17])|!(!data_bus[16])|!(!data_bus[15:0]))?8h18:8hf};
        disc_led_out = {c{5h0,data_bus[18:16]}, data_bus[15:8], data_bus[7:0]};
      14:
        seven_seg_out = {8hff, 8h9, 8h20, (!(!data_bus[18])|!(!data_bus[17])|!(!data_bus[16])|!(!data_bus[15:0]))?8h18:8hf};
        disc_led_out = {c{5h0,data_bus[18:16]}, data_bus[15:8], data_bus[7:0]};
      15:
        seven_seg_out = {8h1, 8h0, 8h20, (!(!data_bus[18])|!(!data_bus[17])|!(!data_bus[16])|!(!data_bus[15:0]))?8h18:8hf};
        disc_led_out = {c{5h0,data_bus[18:16]}, data_bus[15:8], data_bus[7:0]};
      16:
        seven_seg_out = {8h1, 8h1, 8h20, (!(!data_bus[18])|!(!data_bus[17])|!(!data_bus[16])|!(!data_bus[15:0]))?8h18:8hf};
        disc_led_out = {c{5h0,data_bus[18:16]}, data_bus[15:8], data_bus[7:0]};
      17:
        seven_seg_out = {8h1, 8h2, 8h20, (!(!data_bus[18])|!(!data_bus[17])|!(!data_bus[16])|!(!data_bus[15:0]))?8h18:8hf};
        disc_led_out = {c{5h0,data_bus[18:16]}, data_bus[15:8], data_bus[7:0]};
      18:
        seven_seg_out = {8h1, 8h3, 8h20, (!(!data_bus[18])|!(!data_bus[17])|!(!data_bus[16])|!(!data_bus[15:0]))?8h18:8hf};
        disc_led_out = {c{5h0,data_bus[18:16]}, data_bus[15:8], data_bus[7:0]};
      19:
        seven_seg_out = {8h1, 8h4, 8h20, (!(!data_bus[18])|!(!data_bus[17])|!(!data_bus[16])|!(!data_bus[15:0]))?8h18:8hf};
        disc_led_out = {c{5h0,data_bus[18:16]}, data_bus[15:8], data_bus[7:0]};
      20:
        seven_seg_out = {8h1, 8h5, 8h20, (!(!data_bus[18])|!(!data_bus[17])|!(!data_bus[16])|!(!data_bus[15:0]))?8h18:8hf};
        disc_led_out = {c{5h0,data_bus[18:16]}, data_bus[15:8], data_bus[7:0]};
      21:
        seven_seg_out = {8h1, 8h6, 8h20, (!(!data_bus[18])|!(!data_bus[17])|!(!data_bus[16])|!(!data_bus[15:0]))?8h18:8hf};
        disc_led_out = {c{5h0,data_bus[18:16]}, data_bus[15:8], data_bus[7:0]};
      22:
        seven_seg_out = {8h1, 8h7, 8h20, (!(!data_bus[18])|!(!data_bus[17])|!(!data_bus[16])|!(!data_bus[15:0]))?8h18:8hf};
        disc_led_out = {c{5h0,data_bus[18:16]}, data_bus[15:8], data_bus[7:0]};
      23:
        seven_seg_out = {8d18, 8d11, 8d19, 8d19};        //pass
        disc_led_out = 3x{{8h00}};
      24:
        seven_seg_out = {seven_seg_dec.out[1], seven_seg_dec.out[0], 8hff,8hff}; //show no of passes
        disc_led_out = 3x{{8h00}};
      25:
        seven_seg_out = {8d14, 8d11, 8d16, 8d17};        //fail
        disc_led_out = 3x{{8h00}};
      26:
        seven_seg_out = {seven_seg_dec.out[1], seven_seg_dec.out[0], 8hff,8hff}; //show no of failures
        disc_led_out = 3x{{8h00}};
      27:
        seven_seg_out = {8ha, 8h17, 8h28, 8h20};          //alu-
        disc_led_out = {8h00, data_bus[15:8], data_bus[7:0]};
      28:
        seven_seg_out = {c{4h0,data_bus[15:12]}, c{4h0,data_bus[11:8]}, c{4h0,data_bus[7:4]}, c{4h0,data_bus[3:0]}}; //alu out
        disc_led_out = {c{5h0,data_bus[18:16]},data_bus[15:8],data_bus[7:0]}; //z,v,n and alu out
      default:
        seven_seg_out = 4x{{8h0}};
        disc_led_out = 3x{{8h0}};
      }
    
  }
}
